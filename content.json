{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2022-03-30T15:57:48.023Z","updated":"2022-03-30T15:57:48.023Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2022-03-31T04:51:05.152Z","updated":"2022-03-31T04:51:05.152Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-03-30T15:57:45.849Z","updated":"2022-03-30T15:57:45.849Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"python小结1","slug":"python小结1","date":"2022-03-30T16:21:00.000Z","updated":"2022-03-31T04:54:39.551Z","comments":true,"path":"2022/03/31/python小结1/","link":"","permalink":"http://example.com/2022/03/31/python%E5%B0%8F%E7%BB%931/","excerpt":"","text":"Python词法 Python词法符号有空白符，常量，操作符，标识符，关键字，注释 空白符 空格，Tab，换行 Python可以智能缩进 常量 包括整数和实数 二进制数0b开头 八进制数0o开头 十六进制数0x开头 操作符 逻辑运算符 位运算符 成员测试运算符 移位运算符 关系运算符 算术运算符 运算符 说明 (expressions…),[expressions…],{key: value…},{expressions…} 绑定或加圆括号的表达式，列表显示，字典显示集合显示 x[index],x[index:index],x(arguments…),x.attribute 抽取，切片，调用，属性引用 await x await 表达式 ** 乘方 +x,-x,~x 正，负，按位非NOT *,@,/,//,% 乘，矩阵乘，除，整除，取余 +,- 加，减 &lt;&lt;,&gt;&gt; 移位 &amp; 按位与AND ^ 按位异或XOR | 按位或OR in,not in,is,is not,&lt;,&lt;=,&gt;,&gt;=,!=,== 比较运算，包括成员检测和标识号检测 not x 布尔逻辑非NOT and 布尔逻辑与AND or 布尔逻辑或OR if else 条件表达式 lambda lambda表达式 = 赋值表达式 表达式 由对象和运算符组成的式子 算数表达式（算数运算符） 关系表达式（关系运算符） 布尔表达式（布尔运算符和逻辑运算符） 标识符 用户编程时给Python语言描述的对象所起的名字。标识符可由字母、数字、下划线和$符号构成（首字符必须是字母或下划线） 变量：程序运行过程中可以改变的量，提供名字与对象的关联方式 赋值语句：= 可以在一个赋值语句中处理多个变量，如’‘x,y=1,2’‘，’‘x,y=y,x’’ 变量初始化：第一次对变量赋值 变量引用：初始化后，在后续表达式中引用变量名 使用变量之前必须赋值 关键字 是某种程序设计语言中事先定义好的确认符，用来组织语言结构，或者定义内建函数。 注释 单行注释用#标出，多行注释用’‘’（首行和末行） Python内置类型 简单数据类型 布尔类型 数值类型 序列类型 列表 元组 字符串 映射类型 字典 集合类型 集合 简单数据类型 布尔类型 True，等价于1，任何非0元素都可被转化为True，但True只能为1 False， 等价于0 数值类型 int 整型 float 浮点型（4e3科学计数法，总为浮点数） complex 复数型 Python内建函数 函数名 说明 abs(x) 取绝对值 bin(x) 将整数x转化为二进制（'0b…'的字符串） oct(x) 将整数x转化为八进制（'0o…'的字符串） hex(x) 将整数x转化为十六进制（'0x…'的字符串） divmod(x,y) 商余，同时输出商和余数（元组(x//y,x%y)） int(x) 取整，舍弃小数部分 float(x) 将整数或字符串转化为浮点数 pow(x,y) xyx^yxy round(x,[d]) 将x四舍六入五凑偶到d个小数位（默认为0），可能会出现精度丢失 max(x) 返回序列（列表，元组，字符串）中最大的元素 min(x) 返回序列（列表，元组，字符串）中最小的元素 len(x) 返回序列（列表，元组，字符串）元素个数 list(x) 对一个序列创建列表，如’‘list(‘Hello’)=[‘H’,‘e’,‘l’,‘l’,‘o’]’’ range(x) 产生某个整数范围内的整数数字’‘range(3)=[0,1,2]’’ sum(x) 对序列求和 sorted(iterable, [cmp=None, key=None, reverse=False]) 对可迭代对象(列表，元组，字典)进行排序，返回新列表，默认为升序 str(x) 转化为string类型 type(x) 获取x的类型 help 获取帮助信息 input 读取输入，结果为字符串 print 输出，sep设置多个值的分隔符，end设置末尾符 关于input与print的一些trick 关于input 使用’‘input().split()’‘将一行的数据分割（以空格为界），split()后结果为一个列表，如’‘a,b,c=input().split()’’ 利用map函数将多个数据映射到指定类型’‘map(function, iterator, …)’'，如a,b,c=map(int, input().split()) 将map后的结果存入列表’‘list(map(function, iterator, …))’’ 关于print ‘‘print(a, b, c)’’，输出多个值默认一空格分隔（sep参数） 默认以换行符结尾（end参数） 字符串的格式化 语法为’‘&lt;模板串&gt;%&lt;值元组&gt;’’ 模板串中的格式指示符为%&lt;宽度&gt;.&lt;精度&gt;&lt;类型字符&gt; |类型字符|说明| |—|—| |d|十进制整数| |f|浮点数| |s|字符串| |c|字符及其ASCII码| |o|带符号8进制整数| |x|带符号16进制整数| Python常用标准库 使用’‘import’'导入 math模块 字段 说明 pi π\\piπ，15位小数 e eee，15位小数 函数 说明 — — cell(x) 向上取整 floor(x) 向下取整 log(x) ln(x)ln(x)ln(x) log10(x) log10(x)log_{10}(x)log10​(x) log(x,n) logn(x)log_{n}(x)logn​(x) sqrt(x) x\\sqrt{x}x​，不能计算虚数 degrees(x) 弧度到角度 radians(x) 角度到弧度 sin(x) sinx arcsin(x) arcsinx cmath模块 用于复数计算，虚数单位用j 如’‘1+2j’’ random模块 ‘‘randint(a,b)’’ 返回(a,b)(a,b)(a,b)之间一个随机整数 ‘‘uniform(a,b)’’ 返回(a,b)(a,b)(a,b)之间一个随机浮点数 copy模块 ‘‘copy’’ 浅拷贝 ‘‘deepcopy’’ 深拷贝 datetime模块 datetime.date 日期表示类，年\\月\\日 date.today() datetime.time 时间表示类，小时\\分钟\\秒\\毫秒 datetime.datetime 功能覆盖上述两者","categories":[{"name":"python","slug":"python","permalink":"http://example.com/categories/python/"}],"tags":[{"name":"小结","slug":"小结","permalink":"http://example.com/tags/%E5%B0%8F%E7%BB%93/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-03-30T15:25:14.018Z","updated":"2022-03-31T04:54:43.256Z","comments":true,"path":"2022/03/30/hello-world/","link":"","permalink":"http://example.com/2022/03/30/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"python","slug":"python","permalink":"http://example.com/categories/python/"}],"tags":[{"name":"小结","slug":"小结","permalink":"http://example.com/tags/%E5%B0%8F%E7%BB%93/"}]}